input {
  beats {
    port => 5044
    add_field => { "[@metadata][http-input]" => "false" }
  }
  http {
    port => 5045
    add_field => { "[@metadata][http-input]" => "true" }
  }
}

filter {
  if [@metadata][http-input] == "true" {
    date {
      match => [ "date", "UNIX" ]
      remove_field => [ "date" ]
    }
    mutate {
      remove_field => ["headers","host", "[kubernetes][labels][app]"]
      add_field => {
        "[calm_metadata][http-input]" => "true"
      }
    }
  } else {
    mutate {
      add_field => {
        "[calm_metadata][http-input]" => "false"
      }
    }
  }

  if ![calm_metadata] { # add default metadata to log if it doesn't have it
    mutate {
      add_field => {
        "[calm_metadata][category]"        => "deadletter"
        "[calm_metadata][application]"     => "deadletter"
        "[calm_metadata][send_to_es]"      => "false" # logs without correct metadata are not sent to ES
      }
    }
  } else {
   if [calm_metadata][category] not in ["application", "audit", "transaction", "system"] { # ensure metadata category is valid
      mutate {
        replace => {
          "[calm_metadata][category]" => "deadletter"
        }
      }
    }
    if ![calm_metadata][application] { # ensure metadata application exists
      mutate {
        replace => {
          "[calm_metadata][application]" => "deadletter"
        }
      }
    }
    if ![calm_metadata][send_to_es] { # ensure metadata send_to_es exists
      mutate {
        replace => {
          "[calm_metadata][send_to_es]" => "false"
        }
      }
    }
  }

  if [calm_metadata][send_to_es] == "true" { # send log to ES if send_to_es is true
    mutate {
      replace => {
        "[@metadata][send_to_es]" => "true"
      }
    }
  } else { # otherwise do not
    mutate {
      replace => {
        "[@metadata][send_to_es]" => "false"
      }
    }
  }

  mutate {
    add_field => { # add prefixes for storage
      "[@metadata][s3_prefix]" => "%{[calm_metadata][application]}/%{[calm_metadata][category]}/%{+YYYY}/%{+MM}/%{+dd}/"
      "[@metadata][es_index]"  => "%{[calm_metadata][application]}.%{[calm_metadata][category]}-%{+YYYY}-%{+MM}-%{+dd}"
      }
    }
  }

output {
  s3 {
    codec               => json_lines
    region              => "{{ region }}"
    rotation_strategy   => size_and_time
    bucket              => "{{ s3_bucket_name }}"
    time_file           => 1 # Minutes
    size_file           => 52428800 # Bytes (50 MiB)
    temporary_directory => "/usr/share/logstash/s3_queue"
    prefix              => "%{[@metadata][s3_prefix]}"
    encoding            => "gzip"
  }
  if [@metadata][send_to_es] == "true" {
    amazon_es {
      hosts   => ["{{ elasticsearch_endpoint }}"]
      region  => "{{ region }}"
      index   => "calm-logs-%{[@metadata][es_index]}"
    }
  }
}
